@using ChessApp.Data;
@using ChessApp.Features.Chess;
@using BlazorState;
@using ChessApp.Scripts.Chess;

@inherits BlazorStateComponent

<div class="player-bar @getPosition">
    <span>@getPawnEmoji@side: @getPlayer</span>
    @if (displayMaterial)
    {
        <span>+@getMaterial</span>
    }
</div>

@code {
    [Parameter]
    public Sides side { get; set; } 

    ChessState chessState => GetState<ChessState>();
    private Boolean isFlipped => chessState.IsFlipped;
    public int getMaterial => (chessState.Board.Material[(int)side] - chessState.Board.Material[(int)side ^ 1])/100;
    public bool displayMaterial => chessState.Board.Material[(int)side] > chessState.Board.Material[(int)side ^ 1] ? true : false;

    public Player getPlayer => side == Sides.White ? chessState.WhitePlayer : chessState.BlackPlayer;

    public string getPosition => side == Sides.White ? isFlipped ? "top" : "bottom" : !isFlipped? "top" : "bottom";
    public string getPawnEmoji => side == Sides.White ? "♟︎" : "♙";
}