@using ChessApp.Features.Chess;
@using BlazorState;
@using ChessApp.Scripts.Chess;

@inherits BlazorStateComponent

<div class="player-bar @getPosition">
    <span>@getPawnEmoji@side</span>
    @*@if (displayMaterial)
    {
        <span>+@getMaterial</span>
    }*@
</div>

@code {
    [Parameter]
    public Sides side { get; set; } 

    ChessState chessState => GetState<ChessState>();
    private Boolean isFlipped => chessState.IsFlipped;
    //public int getMaterial => side == Side.White ? chessState.Board.Material.White - chessState.Board.Material.Black : chessState.Board.Material.Black - chessState.Board.Material.White;
    //public bool displayMaterial => side == Side.White 
    //    ? chessState.Board.Material.White > chessState.Board.Material.Black ? true : false 
    //    : chessState.Board.Material.White < chessState.Board.Material.Black ? true : false;

    //public Player getPlayer => side == Side.White ? chessState.Board.WhitePlayer : chessState.Board.BlackPlayer;

    public string getPosition => side == Sides.White ? isFlipped ? "top" : "bottom" : !isFlipped? "top" : "bottom";
    public string getPawnEmoji => side == Sides.White ? "♟︎" : "♙";
}